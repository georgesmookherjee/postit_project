name: Tests

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      env:
        TEST_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        TESTING_MODE: "true"
        APP_ENV: "testing"
      run: |
        python -m pytest -v tests/api tests/html --ignore=tests/ui

    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Generate test coverage report
      env:
        TEST_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        TESTING_MODE: "true"
        APP_ENV: "testing"
      run: |
        pip install coverage
        coverage run --source=app -m pytest tests/api/ tests/html/
        coverage xml

    # - name: Upload coverage report
    #   if success()
    #   uses: codecov/codecov-action@v3
    #   with:
    #     file: ./coverage.xml
    #     fail_ci_if_error: false

    # - name: Debug environment
    #   run: |
    #     echo "TEST_DATABASE_URL: $TEST_DATABASE_URL"
    #     cat tests/conftest.py
    #   env:
    #     TEST_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
    #     TESTING_MODE: "true"
    #     APP_ENV: "testing"

    # - name: Run tests
    #   env:
    #     TEST_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
    #     TESTING_MODE: "true"
    #     APP_ENV: "testing"
    #     FLASK_APP: run.py
    #     PYTHONPATH: {{ github.workspace }}
    #   run: |
    #     python -c "import os; print('TEST_DATABASE_URL in Python:', os.getenv('TEST_DATABASE_URL'))"
    #     python -m pytest -v tests/api/test_postits_api.py::test_get_postits -v