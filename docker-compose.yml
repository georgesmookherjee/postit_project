# version: '3.8'  # Retire l'avertissement sur l'attribut 'version'

services:
  postgres:  # Service pour la base de données principale
    image: postgres:14
    container_name: post_it_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      retries: 5

  test_postgres:  # Service pour la base de données de tests
    image: postgres:14
    container_name: post_it_test_db
    environment:
      POSTGRES_USER: ${TEST_POSTGRES_USER}
      POSTGRES_PASSWORD: ${TEST_POSTGRES_PASSWORD}
      POSTGRES_DB: ${TEST_POSTGRES_DB}
    volumes:
      - db_test_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${TEST_POSTGRES_USER}"]
      interval: 10s
      retries: 5

  flask_app:  # Service pour ton application Flask
    build: .
    container_name: flask_app
    env_file: 
      - .env
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - test_postgres
    environment:
      FLASK_ENV: development
      DATABASE_URL: ${DATABASE_URL}
      TEST_DATABASE_URL: ${TEST_DATABASE_URL}
    entrypoint: >
      sh -c "until pg_isready -h postgres -p 5432; do sleep 5; done;
      until pg_isready -h test_postgres -p 5432; do sleep 5; done;
      python run.py"


volumes:
  db_data:
  db_test_data:
